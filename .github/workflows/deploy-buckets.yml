name: Deploy Updated GCS Buckets

on:
  push:
    branches:
      - main

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changed_users: ${{ steps.get-changed-files.outputs.changed_users }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
            fetch-depth: 0

      - name: Detect Changed .tfvars Files
        id: get-changed-files
        run: |
          
          # Find changed .tfvars files in the `terraform/user_vars/` directory
          CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^terraform/user_vars/.*\.tfvars$' || true)
          echo "Changed files: $CHANGED_FILES"

          # Extract user names from changed .tfvars files
          CHANGED_USERS=$(echo "$CHANGED_FILES" | sed -E 's|terraform/user_vars/(.*)\.tfvars|\1|' | jq -R -s -c 'split("\n") | map(select(length > 0))')
          echo "Changed users: $CHANGED_USERS"

          # If no changes detected, output an empty JSON array
          if [ -z "$CHANGED_USERS" ] || [ "$CHANGED_USERS" == "[]" ]; then
          CHANGED_USERS="[]"
          fi

          # Set output
          echo "::set-output name=changed_users::$CHANGED_USERS"

      - name: Debug Changed Users
        run: |
          echo "Changed Users JSON: ${{ steps.get-changed-files.outputs.changed_users }}"
      
      - name: Notify No Changes
        if: ${{ steps.get-changed-files.outputs.changed_users == '[]' }}
        run: echo "No .tfvars files were changed. Skipping deployment."

  deploy:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.changed_users != '[]' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        user: ${{ fromJson(needs.detect-changes.outputs.changed_users) }}
    

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Authenticate with GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }} 
    
      - name: Check for Missing .tfvars File
        id: check-missing-tfvars
        run: |
            CURRENT_DIR=$(pwd)
            TFVARS_FILE="${CURRENT_DIR}/terraform/user_vars/${{ matrix.user }}.tfvars"
            if [  ! -f "$TFVARS_FILE" ]; then
                echo "No .tfvars file found for ${{ matrix.user }}, preparing for destroy."
                echo "::set-output name=destroy::true"
            else
                echo "::set-output name=destroy::false"
            fi

      # - name: Destroy User's Bucket if .tfvars is Missing
      #   if: ${{ steps.check-missing-tfvars.outputs.destroy == 'true' }}
      #   run: |
      #       chmod +x scripts/*.sh
      #       ./scripts/delete_users.sh ${{ matrix.user }}

      - name: Initialize and Deploy if new .tfvars is created
        if: ${{ steps.check-missing-tfvars.outputs.destroy == 'false' }}
        run: |
          chmod +x scripts/*.sh
          ./scripts/generate_users.sh
      
      - name: Notify Deployment Success
        run: echo "Deployment for ${{ matrix.user }} completed successfully."
